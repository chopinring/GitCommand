1.配置标识（Git用邮箱和用户名作为一个标识）
  git config --global user.name "xxxxxx"
  git config --global user.email "xxx@xxx.com"

2.创建版本库（把当前目录变成可管理的仓库 会增加一个.git目录）
  git init

3.添加文件到版本库的暂存区(完整文件名)
  git add xxx.txt

4.提交文件到版本库
  git commit -m "这里是注释信息。"
  git commit -a -m "删除文件后提交的备注信息"

5.查看是否存在文件还未提交
  git status

6.查看文件修改的内容
  git diff readme.txt

7.查看历史提交记录(详细信息)
  git log

8.查看历史提交记录（单行显示）
  git log --pretty=oneline

9.获取版本号
  git reflog

10.回退到上一个版本(回退上一个版本用一个^,上上个版本用^^，以此类推；或者直接用数字进行指定。)
  git reset --hard HEAD^
  git reset --hard HEAD~1


11.回退到指定版本号的版本
  git reset --hard 6fcfc89

12.撤销对文件的修改(情况一：如果未add到暂存区，则撤销后和版本库中文件一样；情况二：如果add到暂存区后再修改，则回到add到暂存区后的状态。)
  git checkout --readme.txt
  **********如果没有--的话，则表示切换到对应的分支*************

13.删除文件（可以直接在文件目录删除文件,执行commit后彻底从版本库删除)
  git rm readme.txt 
  **********在commit之前都可以用git checkout -- readme.txt 进行恢复***********

14.创建SSH Key(会创建id_rsa和id_rsa.pub，前者是私钥，后者是公钥。)
  ssh-keygen -t rsa -C "youremail@example.com"

15.推送本地库的内容到远程库（实质：把当前分支推送到远程，默认为master）
  git remote add origin https://www.github.com/chopinring/JS_Project
  git push -u origin master 
  **********第一次推送时需要加上 -u 参数，把远程库和本地库关联起来，后续推送则不需要**********
  **********第一次推送时还需要输入用户名和密码进行验证***********

16.把远程库克隆到本地库
  git clone https://www.github.com/chopinring/JS_Project

17.创建分支
  git branch branchName

18.合并分支(在另一个分支上面执行，如在master上。)
  git merge branchName

19.创建并切换分支
  git checkout -b branchName
  **********等价于git branch branchName 和 git checkout branchName **********
